@model AppData.ViewModels.ThongKe.vOverView;
@using Microsoft.AspNetCore.Identity;



@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="page-header">
    <div class="header-sub-title">
        <nav class="breadcrumb breadcrumb-dash" style="background-color: white; ">
            <a href="#" class="breadcrumb-item " style="text-decoration: none;"><i class="anticon anticon-home m-r-5"></i>Thống kê</a>
            <span class="breadcrumb-item active">Tổng quan</span>
        </nav>
    </div>
</div>
<div class="">
    <div class="">
        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <p class="m-b-0 text-muted">Doanh thu</p>
                                <h2 class="m-b-0">
                                    @Model.DoanhThuThangNay.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))
                                </h2>
                            </div>



                            @if (Model.DoanhThuThangNay > @Model.DoanhThuThangTruoc)
                            {
                                if (@Model.DoanhThuThangNay > 0)
                                {
                               @*      decimal TileDoanhThu = ((@Model.DoanhThuThangNay - @Model.DoanhThuThangTruoc) / @Model.DoanhThuThangTruoc) * 100;
                                    decimal TiLeTangGiamDoanhThu = Math.Round(TileDoanhThu, 2);
                                    <span class="badge badge-pill badge-cyan font-size-12">
                                        <i class="anticon anticon-arrow-up"></i>
                                        <span class="font-weight-semibold m-l-5">@TiLeTangGiamDoanhThu %</span>
                                    </span> *@
                                }
                                else
                                {

                                    <span class="badge badge-pill badge-cyan font-size-12">
                                        <i class="anticon anticon-arrow-up"></i>
                                        <span class="font-weight-semibold m-l-5">@Model.DoanhThuThangNay</span>
                                    </span>
                                }

                            }
                            else if (@Model.DoanhThuThangNay < @Model.DoanhThuThangTruoc)
                            {

                                decimal TileDoanhThu = ((@Model.DoanhThuThangTruoc - @Model.DoanhThuThangNay) / @Model.DoanhThuThangTruoc) * 100;
                                decimal TiLeTangGiamDoanhThu = Math.Round(TileDoanhThu, 2);
                                <span class="badge badge-pill badge-red font-size-12">
                                    <i class="anticon anticon-arrow-down"></i>
                                    <span class="font-weight-semibold m-l-5">@TiLeTangGiamDoanhThu %</span>
                                </span>
                            }
                            else
                            {

                                <span class="badge badge-pill badge-cyan font-size-12">
                                    <i class="anticon anticon-arrow-up"></i>
                                    <span class="font-weight-semibold m-l-5">0 %</span>
                                </span>
                            }


                        </div>
                        <div class="m-t-40">
                            <div class="d-flex justify-content-between">
                                <div class="d-flex align-items-center">
                                    <span class="badge badge-primary badge-dot m-r-10"></span>
                                    <span class="text-gray font-weight-semibold font-size-13">Tháng trước</span>
                                </div>
                                <span class="text-dark font-weight-semibold font-size-13">@Model.DoanhThuThangTruoc.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</span>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <p class="m-b-0 text-muted">Đánh giá</p>
                                <h2 class="m-b-0">@Model.DanhGiaThangNay.ToString("#,0") Đánh giá</h2>
                            </div>

                            @if (@Model.DanhGiaThangNay > @Model.DanhGiaThangTruoc)
                            {
                                if (@Model.DanhGiaThangTruoc > 0)
                                {
                                    double TileDoanhThu = ((@Model.DanhGiaThangNay - @Model.DanhGiaThangTruoc) / @Model.DanhGiaThangTruoc) * 100;
                                    double TiLeTangGiamDoanhThu = Math.Round(TileDoanhThu, 2);
                                    <span class="badge badge-pill badge-cyan font-size-12">
                                        <i class="anticon anticon-arrow-up"></i>
                                        <span class="font-weight-semibold m-l-5">@TiLeTangGiamDoanhThu %</span>
                                    </span>
                                }
                                else
                                {

                                    <span class="badge badge-pill badge-cyan font-size-12">
                                        <i class="anticon anticon-arrow-up"></i>
                                        <span class="font-weight-semibold m-l-5">@Model.DanhGiaThangNay.ToString("#,0") Đánh giá </span>
                                    </span>
                                }

                            }
                            else if (@Model.DanhGiaThangNay < @Model.DanhGiaThangTruoc)
                            {

                                double TileDoanhThu = ((@Model.DanhGiaThangTruoc - @Model.DanhGiaThangNay) / @Model.DanhGiaThangTruoc) * 100;
                                double TiLeTangGiamDoanhThu = Math.Round(TileDoanhThu, 2);
                                <span class="badge badge-pill badge-red font-size-12">
                                    <i class="anticon anticon-arrow-down"></i>
                                    <span class="font-weight-semibold m-l-5">@TiLeTangGiamDoanhThu %</span>
                                </span>
                            }
                            else
                            {
                                <span class="badge badge-pill badge-cyan font-size-12">
                                    <i class="anticon anticon-arrow-up"></i>
                                    <span class="font-weight-semibold m-l-5">0 %</span>
                                </span>
                            }


                        </div>
                        <div class="m-t-40">
                            <div class="d-flex justify-content-between">
                                <div class="d-flex align-items-center">
                                    <span class="badge badge-success badge-dot m-r-10"></span>
                                    <span class="text-gray font-weight-semibold font-size-13">Tháng trước</span>
                                </div>
                                <span class="text-dark font-weight-semibold font-size-13">@Model.DanhGiaThangTruoc.ToString("#,0") Đánh giá</span>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <p class="m-b-0 text-muted">Đơn đặt hàng</p>
                                <h2 class="m-b-0">@Model.BillOnlThangNay.ToString("#,0") đơn hàng</h2>
                            </div>
                            @if (@Model.BillOnlThangNay > @Model.BillOnlThangTruoc)
                            {
                                if (@Model.BillOnlThangTruoc > 0)
                                {
                                    double TileDoanhThu = ((@Model.BillOnlThangNay - @Model.BillOnlThangTruoc) / @Model.BillOnlThangTruoc) * 100;
                                    double TiLeTangGiamDoanhThu = Math.Round(TileDoanhThu, 2);
                                    <span class="badge badge-pill badge-cyan font-size-12">
                                        <i class="anticon anticon-arrow-up"></i>
                                        <span class="font-weight-semibold m-l-5">@TiLeTangGiamDoanhThu %</span>
                                    </span>
                                }
                                else
                                {
                                    <span class="badge badge-pill badge-cyan font-size-12">
                                        <i class="anticon anticon-arrow-up"></i>
                                        <span class="font-weight-semibold m-l-5">@Model.BillOnlThangNay.ToString("#,0") đơn hàng</span>
                                    </span>
                                }
                            }
                            else if (@Model.BillOnlThangNay < @Model.BillOnlThangTruoc)
                            {
                                double TileDoanhThu = ((@Model.BillOnlThangTruoc - @Model.BillOnlThangNay) / @Model.BillOnlThangTruoc) * 100;
                                double TiLeTangGiamDoanhThu = Math.Round(TileDoanhThu, 2);
                                <span class="badge badge-pill badge-red font-size-12">
                                    <i class="anticon anticon-arrow-down"></i>
                                    <span class="font-weight-semibold m-l-5">@TiLeTangGiamDoanhThu %</span>
                                </span>
                            }
                            else
                            {
                                <span class="badge badge-pill badge-red font-size-12">
                                    <i class="anticon anticon-arrow-up"></i>
                                    <span class="font-weight-semibold m-l-5">0 %</span>
                                </span>
                            }
                        </div>
                        <div class="m-t-40">
                            <div class="d-flex justify-content-between">
                                <div class="d-flex align-items-center">
                                    <span class="badge badge-warning badge-dot m-r-10"></span>
                                    <span class="text-gray font-weight-semibold font-size-13">Tháng trước</span>
                                </div>
                                <span class="text-dark font-weight-semibold font-size-13">@Model.BillOnlThangTruoc.ToString("#,0") đơn hàng </span>
                            </div>

                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <p class="m-b-0 text-muted">Đơn hàng tại quầy</p>
                                <h2 class="m-b-0">@Model.BillOffThangNay.ToString("#,0") đơn hàng</h2>
                            </div>
                                        @if(@Model.BillOffThangNay > @Model.BillOffThangTruoc)
                            {
                                        if (@Model.BillOffThangTruoc > 0)
                                {
                                            double TileDoanhThu = ((@Model.BillOffThangNay - @Model.BillOffThangTruoc) / @Model.BillOffThangTruoc) * 100;
                                    double TiLeTangGiamDoanhThu = Math.Round(TileDoanhThu, 2);
                                    <span class="badge badge-pill badge-cyan font-size-12">
                                        <i class="anticon anticon-arrow-up"></i>
                                        <span class="font-weight-semibold m-l-5">@TiLeTangGiamDoanhThu %</span>
                                    </span>
                                }
                                else
                                {
                                    <span class="badge badge-pill badge-cyan font-size-12">
                                        <i class="anticon anticon-arrow-up"></i>
                                                        <span class="font-weight-semibold m-l-5">(@Model.BillOffThangNay.ToString("#,0") đơn hàng</span>
                                    </span>
                                }
                            }
                            else if (@Model.BillOffThangNay < @Model.BillOffThangTruoc)
                            {
                                 double TileDoanhThu = (@Model.BillOffThangTruoc - (@Model.BillOffThangNay) / @Model.BillOffThangTruoc) * 100;
                                double TiLeTangGiamDoanhThu = Math.Round(TileDoanhThu, 2);
                                <span class="badge badge-pill badge-red font-size-12">
                                    <i class="anticon anticon-arrow-down"></i>
                                    <span class="font-weight-semibold m-l-5">@TiLeTangGiamDoanhThu %</span>
                                </span>
                            }
                            else
                            {
                                <span class="badge badge-pill badge-red font-size-12">
                                    <i class="anticon anticon-arrow-up"></i>
                                    <span class="font-weight-semibold m-l-5">0 %</span>
                                </span>
                            }
                        </div>
                        <div class="m-t-40">
                            <div class="d-flex justify-content-between">
                                <div class="d-flex align-items-center">
                                    <span class="badge badge-warning badge-dot m-r-10"></span>
                                    <span class="text-gray font-weight-semibold font-size-13">Tháng trước</span>
                                   
                                </div>
                                <span class="text-dark font-weight-semibold font-size-13"> @Model.BillOffThangTruoc.ToString("#,0") đơn hàng</span>
                            </div>

                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
  
</div>


<div class="row">
    <div class="col-lg-5">
        <div class="card">
            <div class="card-body" @* style="min-width: 100%; height: 400px; border: 1px solid #ccc" *@>
                <h5>Tỉ lệ Đơn hàng thành công tháng này</h5>
                <div id="detailContent" style="min-width: 100%; height: 400px; border: 1px solid #ccc"> </div>
            </div>
        </div>
    </div>

    <div class="col-lg-7">
        <div class="card">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <h5>Đơn đặt hàng gần đây</h5>
                    <div>
                        <a asp-controller="HoaDon" asp-action="TongQuanHoaDon" class="btn btn-sm btn-default">Xem tất cả</a>
                    </div>
                </div>
                <div class="m-t-30">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>STT</th>
                                    <th>Mã Hóa đơn</th>
                                    <th>Khách hàng</th>
                                    <th>Ngày</th>
                                    <th>Giá trị</th>
                                    <th>Trạng thái thanh toán</th>
                                    <th>Trạng thái giao hàng</th>

                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.billGanDay)
                                {

                                    <tr>
                                        <td>@item.STT</td>

                                        <td>@item.MaHoaDon</td>

                                        <td>@item.NgayTao.ToString("hh:mm tt dd/MM/yyyy")</td>
                                        <td>@item.TenNguoiMua</td>
                                          <td>@item.GiaTien</td>

                                        


                                        @if (item.TrangThaiThanhToan == 1)
                                        {
                                            <td>
                                               Đã thanh toán
                                            </td>
                                        }
                                        else if (item.TrangThaiThanhToan == 2)
                                        {
                                            <td>
                                               Chưa thanh toán
                                            </td>
                                        }
                                       

                                        @if (item.TrangThaiGiaoHang == 1)
                                        {
                                            <td>
                                                Chờ xác nhận
                                            </td>
                                        }
                                        else if (item.TrangThaiGiaoHang == 1)
                                        {
                                            <td>
                                                Đã Xác Nhận
                                            </td>
                                        }
                                        else if (item.TrangThaiGiaoHang == 2)
                                        {
                                            <td>
                                                Đang Giao
                                            </td>
                                        }
                                        else if (item.TrangThaiGiaoHang == 3)
                                        {
                                            <td>
                                                Đã Giao
                                            </td>
                                        }
                                        else if (item.TrangThaiGiaoHang == 4)
                                        {
                                            <td>
                                                Đã hủy
                                            </td>
                                        }
                                        else if (item.TrangThaiGiaoHang ==5)
                                        {
                                            <td>
                                                Xóa
                                            </td>
                                        }
                                       

                                    </tr>
                                }


                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">

                </div>
            </div>
        </div>
    </div>

    @section scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }


        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.5/xlsx.full.min.js"></script>
        <script src="https://html2canvas.hertzen.com/dist/html2canvas.js"></script>
        <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js/dist/chart.umd.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2"></script>
        <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
      <script src="~/js/moment.js"></script> 
      <script src="~/js/JChart.js"></script> 
        <script >
            $(document).ready(function(){
                JChart.initList();
            });
        </script>
   
     @*    <script>

            var arrLabels = ["Thành công", "Hủy", "Các trạng thái khác"];
            var arrData = [0, 0, 0];
            var myChart1;
            function generateRandomColors(count) {
                const colors = [];
                for (let i = 0; i < count; i++) {
                    const color = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, 0.9)`;
                    colors.push(color);
                }
                return colors;
            }

            const colors = generateRandomColors(20);
            function updateChart1() {
                $.ajax({
                    method: "GET",
                    url: "/ThongKe/Chart",
                    // data: { fromDate: '', toDate: '' },
                    success: function (rs) {
                        console.log(rs);
                       
                        $.each(rs, function (i, item) {
                            var soLuongHoaDonThanhCong = rs[0].billThanhCong;
                            var soLuongHoaDonThatBai = rs[0].billThatbai;
                        //    var soLuongHoaDonCho = jsonData.Data[0].SoluongHoaDonCho;

                            // Cập nhật giá trị mới cho biểu đồ
                            arrData[0] = soLuongHoaDonThanhCong;
                            arrData[1] = soLuongHoaDonThatBai;
                     //       arrData[2] = soLuongHoaDonCho;

                        });
                        // Cập nhật dữ liệu cho biểu đồ hiện tại
                        myChart1.data.labels = arrLabels;
                        myChart1.data.datasets[0].data = arrData;
                        myChart1.update();
                    }
                });
            }

            // Khởi tạo biểu đồ ban đầu
            $(document).ready(function () {
                const data1 = {
                    labels: [],
                    datasets: [
                        {
                            label: '',
                            backgroundColor: colors,
                            borderColor: colors,
                            pointRadius: false,
                            pointColor: '#3b8bba',
                            pointStrokeColor: 'rgba(60,141,188,1)',
                            pointHighlightFill: '#fff',
                            pointHighlightStroke: 'rgba(60,141,188,1)',
                            data: []
                        }
                    ]
                };

                const config1 = {
                    type: 'doughnut',
                    data: data1,
                    options: {
                        layout: {
                            padding: 10
                        },
                        plugins: {
                            legend: {
                                display: true,
                                position: 'right',
                                padding: 30
                            },
                            datalabels: {
                                formatter: (value, ctx) => {
                                    console.log(value);
                                    console.log(ctx);
                                    const total = ctx.chart.data.datasets[0].data.reduce((acc, val) => acc + val, 0);
                                    console.log("Hi, chúng ta lại gặp nhau rồi ");
                                    console.log(total);
                                    const percentage = total !== 0 ? ((value / total) * 100).toFixed(2) + '%' : '0.00%';

                                    return percentage;
                                },
                                anchor: 'center',
                                align: 'end',
                                color: 'white',

                            },
                        },
                    },
                    plugins: [ChartDataLabels]
                };

                myChart1 = new Chart(
                    document.getElementById('myChart'),
                    config1
                );

                updateChart1();

            });




        </script>
 *@
       @*  <script>

            var dates = [];
            var arrOnline = [];
            var arrOffline = [];
            var myChart;
            function updateChart() {
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("OverView", "ThongKe")",
                    success: function (rs) {
                        console.log(rs);
                        var jsonData = JSON.parse(rs);
                        console.log(rs);

                        dates = [];
                        arrOnline = [];
                        arrOffline = [];

                        $.each(jsonData.Data, function (i, item) {
                            console.log("Hi, chào cậu ");

                            arrOnline.push(item.BillThanhCong);
                            arrOffline.push(item.BillThanhCong);
                            dates.push(item.ThoiGian);
                            console.log(dates);
                            console.log(arrOffline);

                        });
                        console.log(dates);
                        myChart.data.labels = dates;
                        myChart.data.datasets[0].data = arrOffline;
                        myChart.data.datasets[1].data = arrOnline;

                        myChart.update();
                        //load_data(rs.data);
                    }
                });
            }

            // Khởi tạo biểu đồ ban đầu
            $(document).ready(function () {
                const data = {
                    labels: [],
                    datasets: [
                        {
                            label: 'Online',
                            backgroundColor: 'rgba(63, 135, 245, 1)',
                            borderColor: 'rgba(60,141,188,0.8)',
                            pointRadius: false,
                            pointColor: '#3b8bba',
                            pointStrokeColor: 'rgba(60,141,188,1)',
                            pointHighlightFill: '#fff',
                            pointHighlightStroke: 'rgba(60,141,188,1)',
                            data: []
                        },
                        {
                            label: 'Offline',
                            backgroundColor: 'rgba(210, 214, 222, 1)',
                            borderColor: 'rgba(210, 214, 222, 1)',
                            pointRadius: false,
                            pointColor: 'rgba(210, 214, 222, 1)',
                            pointStrokeColor: '#c1c7d1',
                            pointHighlightFill: '#fff',
                            pointHighlightStroke: 'rgba(220,220,220,1)',
                            data: []
                        }
                    ]
                };

                const config = {
                    type: 'bar',
                    data: data,
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        //datasetFill: false,
                        //scales: {
                        //    y: beginAtZero: true,
                        //} lừa đấy
                    }
                };

                myChart = new Chart(
                    document.getElementById('ThongKeBanHang-chart'),
                    config
                );

                updateChart();

            });

            //// Xử lý sự kiện khi ngày thay đổi
            //$('#fromDate, #toDate').change(function () {
            //    var fromDate = $('#fromDate').val();
            //    var toDate = $('#toDate').val();
            //    updateChart(fromDate, toDate);
            //});
            //function load_data(data) {
            //    var strHtml = "";
            //    $.each(data, function (i, item) {
            //        var strDate = moment(item.date).format('DD/MM/yyyy');
            //        strHtml += "<tr>";
            //        strHtml += "<td>" + (i + 1) + "</td>";
            //        strHtml += "<td>" + strDate + "</td>";
            //        strHtml += "<td>" + item.doanhThu + "</td>";
            //        strHtml += "<td>" + item.loiNhuan + "</td>";
            //        strHtml += "</tr>";
            //    });
            //    $('#load_data').html(strHtml);
            //}

        </script> *@
    }
