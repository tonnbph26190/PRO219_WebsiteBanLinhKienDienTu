@using OfficeOpenXml.FormulaParsing.Excel.Functions.Text;
@using X.PagedList;
@using X.PagedList.Mvc.Common;
@using X.PagedList.Mvc.Core;
@model IPagedList<AppData.Models.Bill>


@{
    ViewData["Title"] = "Danggiaoview";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<h1>Đang Giao</h1>
<div>
    <form method="get" action="@Url.Action("Danggiaoview", "Bill")">
        <label for="search">Tìm kiếm:</label>
        <input type="text" name="search" id="search" placeholder="Nhập Mã Hóa Đơn" />
        <button style="background-color:#3f87f5; border-color: #3f87f5;" type="submit">Tìm kiếm</button>
    </form>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                Tên Khách Hàng
            </th>
            <th>Mã Hóa Đơn</th>
            <th>
                Ngày Tạo
            </th>
            <th>
                Tình Trạng
            </th>
            <th>Chi tiết</th>
            <th>
                Trạng Thái Thanh Toán
            </th>

            <th>Hành Động  </th>
        </tr>
    </thead>
    <tbody>
        @if (Model == null || !Model.Any())
        {
            <h2 style="text-align:center">Hiện đang Không có hóa đơn</h2>
        }
        else
        {
            @foreach (var item in Model)
            {
                String dh0 = "Chờ xác nhận";
                String dh1 = "Đã xác nhận";
                String dh2 = "Đang giao";
                String dh3 = "Đã giao";
                String dh4 = "Đã hủy";
                
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BillCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedTime)
                    </td>
                    <td>
                        @if (item.Status == 2)
                        {
                            <p class="text-success"> @dh2</p>
                        }

                    </td>
                    <td>
                        <a href="@Url.Action("Detail", "Bill", new { id = item.Id })">Xem Chi tiết</a>
                    </td>
                    <td>
                        @item.deliveryPaymentMethod  @if (item.StatusPayment == 1)
                        {
                            <span class="text-success">Đã thanh toán </span>
                        }
                        else
                        {
                            <span class="text-danger">Chưa thanh toán </span>
                        }
                    </td>

                    <td>
                        <a class="btn btn-sm btn-light text-success border btn-confirm" href="@Url.Action("Dagiao", "Bill", new { id = item.Id })"> Giao Thành Công  </a>
                    </td>
                    <td>
                        <a class="btn btn-sm btn-light text-danger border btn-confirm" href="@Url.Action("Giaothatbai", "Bill", new { id = item.Id })"> Giao Thất Bại </a>
                    </td>
                </tr>
            }

        }

    </tbody>
</table>
<div class="custom-pager">
    @Html.PagedListPager(Model, pageNumber => Url.Action("Danggiaoview", new { pageNumber, pageSize = Model.PageSize }), new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded, LiElementClasses = new[] { "page-item" }, PageClasses = new[] { "page-link" } })
</div>

<script>
    $(document).ready(function () {
        $('.btn-confirm').click(function (e) {
            e.preventDefault();
            var url = $(this).attr('href');

            // Hiển thị hộp thoại xác nhận
            Swal.fire({
                title: 'Xác nhận',
                text: 'Bạn có chắc muốn chuyển trạng thái của hóa đơn không?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'OK',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Nếu người dùng chọn "OK", gửi yêu cầu Ajax
                    $.ajax({
                        type: 'POST', // hoặc 'GET' tùy thuộc vào cách bạn xử lý ở server
                        url: url,
                        success: function (data) {
                            // Xử lý reload trang và hiển thị thông báo thành công
                            if (data.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Thành công!',
                                    text: 'Thay đổi đã được lưu thành công.',
                                    showConfirmButton: false,
                                    timer: 1500,
                                    onClose: function () {
                                        location.reload();
                                    }
                                });
                            } else {
                                alert('Chuyển trạng thái thất bại');
                            }
                        },
                        error: function () {
                            alert('Đã xảy ra lỗi');
                        }
                    });
                }
            });
        });
    });
</script>
<style>
    .custom-pager {
        display: flex;
        justify-content: flex-end;
        margin-right: 100px; /* Điều chỉnh khoảng cách bên phải */
    }

        .custom-pager .page-item {
            margin: 0 5px; /* Điều chỉnh khoảng cách giữa các mũi tên */
        }

        .custom-pager .page-link {
            font-size: 13px; /* Điều chỉnh kích thước của mũi tên */
        }
</style>

